{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Generator is a Laravel-based open-source toolkit for building basic needs for administration interface setup like Create, Read, Update, and Delete. It's the minimalistic template or a starting point for developing CMS system, admin panel, or any other web application that requires CRUD functionality.</p>"},{"location":"#the-reason","title":"The Reason","text":"<p>We have a bit of time to build master main data over and over again, therefore this package may let you focus on your core features application, Instead, you might use that time to sleep, play video games, or, since it's Ramadhan, pray to Allah \ufdfb and Prophet Muhammad \ufdfa</p>"},{"location":"#upgrade-guide","title":"Upgrade Guide","text":"<p>Currently, we don't have any upgrade guide for this time. But, we will make it soon if we have any breaking changes. Enjoy!</p>"},{"location":"#who-we-are","title":"Who We Are","text":"<p>We're just bunch of people working on side project (freelance) developer based in Bekasi, Indonesia. We want to make a difference in the world by helping people making their own projects via open source and free software such like our creation.</p>"},{"location":"#pricing","title":"Pricing","text":"<p>Nope, it's 100% free &amp; open source.</p>"},{"location":"#license","title":"License","text":"<p>MIT.</p>"},{"location":"#sponsors","title":"Sponsors","text":"<p>Space is available, lmao.</p>"},{"location":"#contributors","title":"Contributors","text":"<p>Thank you to all our fellow contributors.</p> <p> </p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#simple-version","title":"Simple Version","text":"<ul> <li> CRUD Generator<ul> <li>Support more than 15 column types of migrations, like <code>string, char, date, year</code>, etc.</li> <li>Datatables (Yajra Datatables)</li> <li>One To Many (Inverse) / Belongs To</li> <li>Model casting</li> <li>Image upload (Intervention Image)</li> <li>Support HTML 5 Input</li> <li>Request validations supported: <code>required, in, image, min, max, string, email, number, date, exists, nullable, unique, comfirmed</code> </li> </ul> </li> </ul>"},{"location":"features/#full-version","title":"Full Version","text":"<ul> <li> CRUD Generator</li> <li> Configurable sidebar menus</li> <li> CRUD User</li> <li> Roles and permissions (Spatie Permission)</li> <li> Authentication (Laravel Fortify)<ul> <li>Login</li> <li>Register</li> <li>Forgot Password</li> <li>2FA Authentication</li> <li>Update profile information </li> </ul> </li> </ul>"},{"location":"features/#avaiable-commands","title":"Avaiable Commands","text":""},{"location":"features/#install-the-generator","title":"Install The Generator","text":"<p>Install Generator Variants (Simple/Full Version)</p> <p>For simple version <pre><code>php artisan generator:install simple</code></pre> For full verion <pre><code>php artisan generator:install full</code></pre></p> <p>Warning! That will overwrite several files, so use caution while using this command and avoid using it more than once.</p>"},{"location":"features/#set-the-sidebar-menu","title":"Set the sidebar menu","text":"<p>Set the sidebar menu to fully blade code (static) or use a list from config (dynamic)</p> <p>Sidebar configuration place in <code>config/generator.php</code></p> <pre><code>php artisan generator:sidebar dynamic</code></pre> <p>While using static sidebar menu, you feel free to edit the sidebar menus on <code>resources/views/layouts/sidebar.blade.php</code></p> <pre><code>php artisan generator:sidebar static</code></pre> <p>After you create a new module using the generator, sidebar will automatically comeback to set dynamic</p>"},{"location":"features/#utilitieshelpers","title":"Utilities/Helpers","text":""},{"location":"features/#check-sidebar-active-menus","title":"Check sidebar active menus","text":"<pre><code>is_active_menu(string|array $menu): boolean;</code></pre>"},{"location":"features/#utility-class","title":"Utility class","text":"<p>All utility functions that you maybe need, are available in <code>EvdigiIna\\Generator\\Generators\\GeneratorUtils</code></p> <pre><code>use EvdigiIna\\Generator\\Generators\\GeneratorUtils;\n\n/**\n* Get template/stub file.\n*\n* @param string $path\n* @return string\n*/\nGeneratorUtils::getTemplate(string $path): string\n\n/**\n* Check folder if doesnt exist, then make folder.\n*\n* @param string $path\n* @return void\n*/\nGeneratorUtils::checkFolder(string $path): void\n\n/**\n* Convert string to singular pascal case.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::singularPascalCase(string $string): string\n\n/**\n* Convert string to singular pascal case.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::pascalCase(string $string): string\n\n/**\n* Convert string to plural pascal case.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::pluralPascalCase(string $string): string\n\n/**\n* Convert string to plural snake case.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::pluralSnakeCase(string $string): string\n\n/**\n* Convert string to singular snake case.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::singularSnakeCase(string $string): string\n\n/**\n* Convert string to plural pascal case.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::pluralCamelCase(string $string): string\n\n/**\n* Convert string to singular pascal case.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::singularCamelCase(string $string): string\n\n/**\n* Convert string to plural, kebab case, and lowercase.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::pluralKebabCase(string $string): string\n\n/**\n* Convert string kebab case, and lowercase.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::kebabCase(string $string): string\n\n/**\n* Convert string to singular, kebab case, and lowercase.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::singularKebabCase(string $string): string\n\n/**\n* Convert string to singular, remove special caracters, and lowercase.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::cleanSingularLowerCase(string $string): string\n\n/**\n* Remove special caracters, and lowercase.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::cleanLowerCase(string $string): string\n\n/**\n* Convert string to plural, remove special caracters, and uppercase every first letters.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::cleanPluralUcWords(string $string): string\n\n/**\n* Convert string to singular, remove special caracters, and uppercase every first letters.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::cleanSingularUcWords(string $string): string\n\n/**\n* Remove special caracters, and uppercase every first letters.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::cleanUcWords(string $string): string\n\n/**\n* Convert string to plural, remove special caracters, and lowercase.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::cleanPluralLowerCase(string $string): string\n\n/**\n* Get 1 column after id on the table.\n*\n* @param string $table\n* @return string $column\n*/\nGeneratorUtils::getColumnAfterId(string $table): string\n\n/**\n* Select id and column after id on the table.\n*\n* @param string $table\n* @return string $selectedField\n*/\nGeneratorUtils::selectColumnAfterIdAndIdItself(string $table): string\n\n/**\n* Converts camelCase string to have spaces between each.\n*\n* @param string $string\n* @return string\n*/\nGeneratorUtils::fromCamelCase(string $string): string\n\n/**\n* Set model name from the latest of array(if exists).\n*\n* @param string $model\n* @param string $style\n* @return string\n*/\nGeneratorUtils::setModelName(string $model, string $style = 'pascal case'): string\n\n/**\n* Set default image and code to controller.\n*\n* @param null|string $default,\n* @param string $field\n* @param string $model\n* @return array\n*/\nGeneratorUtils::setDefaultImage(null|string $default, string $field, string $model): array\n\n/**\n* Convert array from config to string like array.\n*\n* @param array $idebars\n* @return string\n*/\nGeneratorUtils::convertArraySidebarToString(array $sidebars): string</code></pre>"},{"location":"features/#things-that-we-want-to-add-in-the-future","title":"Things that we want to add in the future","text":"<ul> <li>API CRUD generator</li> <li>API docs</li> <li>Can create more relation type</li> <li>Upload file except image</li> <li>CRUD with desain pattern(Service/Repository Pattern)</li> <li>Laravel table pagination</li> <li>Import/Export csv</li> <li>Input for custom table name</li> <li>Change request validation as an array</li> <li>Add a checkbox for whether to use route model binding or not</li> <li>Add a checkbox to turn off automatic pluralization</li> <li>If the time zone is set to Indonesia, then disable pluralization</li> <li>Add username to users table</li> <li>New template admin</li> <li>Option to auto migrate table or not</li> <li>Add config for showing an image in the data table or not</li> <li>ability to hide/show the field on the view page</li> <li>Configuration to limit showing fields in the index page</li> <li>Can select the field that will be showing in belongsTo the relation</li> <li>The generator can make seeder and factory</li> <li>Add default config for minimum &amp; maximum length to column type string</li> <li>The generator can make subfolders for request class validation</li> <li>Add configuration for image type rounded or square</li> <li>Add support for diffForHumans() to input type date.</li> <li>Can custom validation(write-in input)</li> <li>The generator can use caching</li> <li>The generator can create policy</li> <li>The generator can create model observer</li> <li>Use database transaction</li> <li>The generator can create mutator &amp; casting</li> <li>Configuration for upload file to S3</li> <li>Add soft delete option</li> <li>If the model is in a subfolder then the route will use the sub-route</li> <li>Add unit test for the generator</li> <li>The generator can create unit test</li> <li>Add notification if the user changed their email or password (package)</li> <li>Add activity log (package)</li> <li>Add backup database (package)</li> <li>The Generator uses enum class for column type enum</li> <li>Refactor code</li> </ul> <p>The list is subject to change at any time and features may be added in any order.</p>"},{"location":"getting_started/","title":"Getting Started","text":""},{"location":"getting_started/#requirements","title":"Requirements","text":"<p>All you need is Composer, PHP ^8.1, and Laravel ^9.x.</p>"},{"location":"getting_started/#installation","title":"Installation","text":"<pre><code>composer require evdigiina/generator --dev</code></pre> <p>For this package, there are two variations: Simple Version and Full Version</p>"},{"location":"getting_started/#simple-version","title":"Simple Version","text":"<p>Only the generator, includes: Yajra Datatables, Intervention Image, and Bootstrap 5.</p> <p>View all features</p> <p>Publish assets</p> <pre><code>php artisan generator:install simple</code></pre> <p>Register the provider in <code>config/app.php</code></p> <pre><code>/*\n* Package Service Providers...\n*/\nApp\\Providers\\ViewComposerServiceProvider::class,</code></pre> <p>Then goes to <code>/simple-generators/create/</code></p>"},{"location":"getting_started/#full-version","title":"Full Version","text":"<p>The generator + starter app, includes: Yajra Datatables, Intervention Image, Laravel Fortify, Spatie Permission, and Mazer Template.</p> <p>View all features.</p> <p>Installing this package after a brand-new Laravel installation is necessary if you want to use the full version of it. because several files will be overwritten.</p> <p>Install Laravel Fortify &amp; Spatie Permission</p> <pre><code>composer require laravel/fortify spatie/laravel-permission</code></pre> <p>Publish assets</p> <pre><code>php artisan generator:install full</code></pre> <p>Warning! Be careful with this command, it will overwrite several files, don't run it multiple times.</p> <p>Register the provider in <code>config/app.php</code></p> <pre><code>/*\n* Package Service Providers...\n*/\n\nApp\\Providers\\FortifyServiceProvider::class,\nSpatie\\Permission\\PermissionServiceProvider::class,\nApp\\Providers\\ViewComposerServiceProvider::class,</code></pre> <p>Run migration and seeder</p> <pre><code>php artisan migrate --seed</code></pre> <p>Then goes to <code>/generators/create</code></p> <p>Account</p> <ul> <li>Email: admin@example.com</li> <li>Password: password</li> </ul>"},{"location":"getting_started/#whats-inside","title":"What's inside?","text":""},{"location":"getting_started/#simple-version_1","title":"Simple Version","text":"<ul> <li>Yajra datatable - ^10.x</li> <li>Intervention Image - ^2.x</li> <li>Bootstrap - ^5.x</li> </ul>"},{"location":"getting_started/#full-version_1","title":"Full Version","text":"<ul> <li>Yajra datatable - ^10.x</li> <li>Intervention Image - ^2.x</li> <li>Laravel Forify - ^1.x</li> <li>Spatie permission - ^5.x</li> <li>Mazer template - ^2.x </li> </ul>"},{"location":"how_to_contribute/","title":"How To Contribute","text":"<p>Star the repository</p>"},{"location":"how_to_contribute/#coming-soon","title":"Coming soon","text":""},{"location":"sponsors/","title":"Sponsors / Supporters","text":""},{"location":"sponsors/#become-a-sponsor-supporter","title":"Become a sponsor / supporter","text":"<p>Generator is an MIT-licensed open-source project and is completely free to use. The tremendous amount of effort needed to maintain and develop new features for the project is only made sustainable thanks to the generous financial backing of our sponsors or supporters.</p>"},{"location":"sponsors/#give-it-personally-to-our-core-team-member","title":"Give it personally to our core team member","text":"<ul> <li> Mohammad Zulfahmi (Author of the Generator)<ul> <li>GitHub Sponsor</li> <li>Buymeacoffe</li> <li>Ko-fi</li> <li>Saweria</li> </ul> </li> </ul> <ul> <li> Rachmad Nur Hayat<ul> <li>GitHub</li> <li>Buymeacoffe</li> <li>Ko-fi</li> <li>Saweria</li> </ul> </li> </ul>"},{"location":"sponsors/#sponsor-as-a-company","title":"Sponsor as a company","text":"<p>Your company logo will appear on our website and GitHub project READMEs. Furthermore, supporting OSS increases your brand's reputation. To do so, please contact us using the details provided below.</p> <ul> <li>mohammad.zulfahmi03@gmail.com</li> <li>Rahmat</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#create-your-first-crud","title":"Create your first CRUD","text":"<p>Go to <code>/generators/create</code> if yo're using Full Version or <code>/simple-generators/create</code> for Simple Version</p> <p>Below is table about supported input type &amp; validation when you are using some column type.</p> Columm Type Input Type Validation Length (min &amp; max) <code>string</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>integer</code> <code>number, range, hidden</code> <code>required|numeric</code> \u2705 <code>text</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>booelan</code> <code>radio, select, datalist</code> <code>required|booelan</code> \u274c <code>char</code> <code>text, color, week, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>date</code> <code>date, month</code> <code>required|date</code> \u274c <code>time</code> <code>time</code> <code>required|date</code> \u274c <code>year</code> <code>select, datalist</code> <code>required|numeric</code> \u274c <code>dateTime</code> <code>datetime-local</code> <code>required|date</code> \u274c <code>decimal</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>double</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>enum</code> <code>select, readio, datalist</code> <code>required|in</code> \u274c <code>float</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>foreignId</code> <code>select, datalist</code> <code>required|exist</code> \u274c <code>tinyInteger</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>mediumInteger</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>bigInteger</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>tinyText</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>mediumText</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>longText</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <p><code>required</code> validation will change to <code>nullable</code> if you uncheck required switch in the form, if any input type <code>password</code> will automatically added <code>confirmed</code> validation, <code>min:1|max:100</code> for supported length column and <code>email|unique</code> for <code>email</code> input type.</p>"},{"location":"usage/#create-relation","title":"Create Relation","text":"<p>For now is only support One To Many (Inverse) / Belongs To.</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam id lacus id sem dapibus faucibus. Aenean eu magna sodales augue efficitur porttitor eget a mi. Aenean pulvinar sit amet tellus sit amet placerat. Fusce pulvinar suscipit lacus, ut fermentum nulla efficitur a.</p>"},{"location":"usage/#create-upload-file","title":"Create Upload File","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam id lacus id sem dapibus faucibus. Aenean eu magna sodales augue efficitur porttitor eget a mi. Aenean pulvinar sit amet tellus sit amet placerat. Fusce pulvinar suscipit lacus, ut fermentum nulla efficitur a.</p> <p>if you are using <code>storage</code> for store the image, make sure you run <code>php artisan storage:link</code></p>"},{"location":"usage/#create-sidebar-menu","title":"Create sidebar menu","text":"<p>This feature only avaiable in full version.</p> <p>You can easily create a dynamic sidebar menus  with just a few input. all sidebar menus configuration place in <code>config/generator.php</code></p> <p>How about i dont need dynamic sidebar menu, i just want create my menu in <code>blade</code>? yeah we provide it, click here how to do it.</p>"},{"location":"usage/#configuration","title":"Configuration","text":"<p>Below is the default config for the generator and sidebar menus:</p> <pre><code>return [\n    /**\n     * If any input file(image) as default will used options below.\n     */\n    'image' =&gt; [\n        /**\n         * Path for store the image.\n         *\n         * avaiable options:\n         * 1. public\n         * 2. storage\n         */\n        'path' =&gt; 'storage',\n\n        /**\n         * Will used if image is nullable and default value is null.\n         */\n        'default' =&gt; 'https://via.placeholder.com/350?text=No+Image+Avaiable',\n\n        /**\n         * Crop the uploaded image using intervention image.\n         */\n        'crop' =&gt; true,\n\n        /**\n         * When set to true the uploaded image aspect ratio will still original.\n         */\n        'aspect_ratio' =&gt; true,\n\n        /**\n         * Crop image size.\n         */\n        'width' =&gt; 500,\n        'height' =&gt; 500,\n    ],\n\n    'format' =&gt; [\n        /**\n         * Will used to first year on select, if any column type year.\n         */\n        'first_year' =&gt; 1900,\n\n        /**\n         * If any date column type will cast and display used this format, but for input date still will used Y-m-d format.\n         *\n         * another most common format:\n         * - M d Y\n         * - d F Y\n         * - Y m d\n         */\n        'date' =&gt; 'd/m/Y',\n\n        /**\n         * If any input type month will cast and display used this format.\n         */\n        'month' =&gt; 'm/Y',\n\n        /**\n         * If any input type time will cast and display used this format.\n         */\n        'time' =&gt; 'H:i',\n\n        /**\n         * If any datetime column type or datetime-local on input, will cast and display used this format.\n         */\n        'datetime' =&gt; 'd/m/Y H:i',\n\n        /**\n         * Limit string on index view for any column type text or longtext.\n         */\n        'limit_text' =&gt; 100,\n    ],\n\n    /**\n     * It will used for generator to manage and showing menus on sidebar views.\n     *\n     * Example:\n     * [\n     *   'header' =&gt; 'Main',\n     *\n     *   // All permissions in menus[] and submenus[]\n     *   'permissions' =&gt; ['test view'],\n     *\n     *   menus' =&gt; [\n     *       [\n     *          'title' =&gt; 'Main Data',\n     *          'icon' =&gt; '&lt;i class=\"bi bi-collection-fill\"&gt;&lt;/i&gt;',\n     *          'route' =&gt; null,\n     *\n     *          // permission always null when isset submenus\n     *          'permission' =&gt; null,\n     *\n     *          // All permissions on submenus[] and will empty[] when submenus equals to []\n     *          'permissions' =&gt; ['test view'],\n     *\n     *          'submenus' =&gt; [\n     *                 [\n     *                     'title' =&gt; 'Tests',\n     *                     'route' =&gt; '/tests',\n     *                     'permission' =&gt; 'test view'\n     *                  ]\n     *               ],\n     *           ],\n     *       ],\n     *  ],\n     *\n     * This code below always changes when you use a generator and maybe you must lint or format the code.\n     */\n    'sidebars' =&gt; [\n        [\n            'header' =&gt; 'Main',\n            'permissions' =&gt; [\n                'test view'\n            ],\n            'menus' =&gt; [\n                [\n                    'title' =&gt; 'Main Data',\n                    'icon' =&gt; '&lt;i class=\"bi bi-collection-fill\"&gt;&lt;/i&gt;',\n                    'route' =&gt; null,\n                    'permission' =&gt; null,\n                    'permissions' =&gt; [\n                        'test view'\n                    ],\n                    'submenus' =&gt; [\n                        [\n                            'title' =&gt; 'Tests',\n                            'route' =&gt; '/tests',\n                            'permission' =&gt; 'test view'\n                        ]\n                    ]\n                ]\n            ]\n        ],\n        [\n            'header' =&gt; 'Users',\n            'permissions' =&gt; [\n                'user view',\n                'role &amp; permission view'\n            ],\n            'menus' =&gt; [\n                [\n                    'title' =&gt; 'Users',\n                    'icon' =&gt; '&lt;i class=\"bi bi-people-fill\"&gt;&lt;/i&gt;',\n                    'route' =&gt; '/users',\n                    'permission' =&gt; 'user view',\n                    'permissions' =&gt; [],\n                    'submenus' =&gt; []\n                ],\n                [\n                    'title' =&gt; 'Roles &amp; permissions',\n                    'icon' =&gt; '&lt;i class=\"bi bi-person-check-fill\"&gt;&lt;/i&gt;',\n                    'route' =&gt; '/roles',\n                    'permission' =&gt; 'role &amp; permission view',\n                    'permissions' =&gt; [],\n                    'submenus' =&gt; []\n                ]\n            ]\n        ],\n    ],\n];\n</code></pre>"}]}