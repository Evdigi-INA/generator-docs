{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Generator is a Laravel-based open-source toolkit for building basic needs for administration interface setup like Create, Read, Update, and Delete. It's the minimalistic template or a starting point for developing CMS system, admin panel, or any other web application that requires CRUD functionality.</p>"},{"location":"#the-reason","title":"The Reason","text":"<p>We have a bit of time to build master main data over and over again, therefore this package may let you focus on your core features application, Instead, you might use that time to sleep, play video games, or touch some grass.</p>"},{"location":"#who-we-are","title":"Who We Are","text":"<p>We're just bunch of people working on side project (freelance) developer based in Bekasi, Indonesia. We want to make a difference in the world by helping people making their own projects via open source and free software such like our creation.</p>"},{"location":"#pricing","title":"Pricing","text":"<p>Nope, it's 100% free &amp; open source.</p>"},{"location":"#license","title":"License","text":"<p>MIT.</p>"},{"location":"#sponsors","title":"Sponsors","text":"<p>Space is available, lmao.</p>"},{"location":"#contributors","title":"Contributors","text":"<p>Thank you to all our fellow contributors.</p> <p> </p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#simple-version","title":"Simple Version","text":"<ul> <li> CRUD Generator<ul> <li>Support more than 15 column types of migrations, like <code>string, char, date, year</code>, etc.</li> <li>Datatables (Yajra Datatables)</li> <li>One To Many (Inverse) / Belongs To</li> <li>Model casting</li> <li>Image upload (Intervention Image)</li> <li>Support HTML 5 Input</li> <li>Request validations supported: <code>required, in, image, min, max, string, email, number, date, exists, nullable, unique, confirmed</code> </li> </ul> </li> </ul>"},{"location":"features/#full-version","title":"Full Version","text":"<ul> <li> CRUD Generator</li> <li> Configurable sidebar menus</li> <li> CRUD User</li> <li> Roles and permissions (Spatie Permission)</li> <li> Authentication (Laravel Fortify)<ul> <li>Login</li> <li>Register</li> <li>Forgot Password</li> <li>2FA Authentication</li> <li>Update profile information </li> </ul> </li> </ul>"},{"location":"features/#available-commands","title":"Available Commands","text":""},{"location":"features/#install-the-generator","title":"Install The Generator","text":"<p>Install Generator Variants (Simple/Full Version)</p> <p>For simple version <pre><code>php artisan generator:install simple</code></pre> For full version <pre><code>php artisan generator:install full</code></pre></p> <p>Warning! That will overwrite several files, so use caution while using this command and avoid using it more than once.</p>"},{"location":"features/#set-the-sidebar-menu","title":"Set the sidebar menu","text":"<p>Set the sidebar menu to fully blade code (static) or use a list from config (dynamic)</p> <p>Sidebar configuration place in <code>config/generator.php</code></p> <pre><code>php artisan generator:sidebar dynamic</code></pre> <p>While using static sidebar menu, you feel free to edit the sidebar menus on <code>resources/views/layouts/sidebar.blade.php</code></p> <pre><code>php artisan generator:sidebar static</code></pre> <p>After you create a new module using the generator, sidebar will automatically comeback to set dynamic</p>"},{"location":"features/#utilitieshelpers","title":"Utilities/Helpers","text":""},{"location":"features/#check-sidebar-active-menus","title":"Check sidebar active menus","text":"<pre><code>is_active_menu(string|array $menu): boolean;</code></pre>"},{"location":"features/#utility-class","title":"Utility class","text":"<p>All utility functions that you maybe need, are available in <code>App\\Generators\\GeneratorUtils</code></p> <pre><code>use App\\Generators\\GeneratorUtils;\n\n/**\n * Get template/file.\n*/\npublic static function getTemplate(string $path): string;\n\n/**\n* Get published files.\n*/\npublic static function getPublishedFiles(string $path): string;\n\n/**\n* Check folder if not exist, then make folder.\n*/\npublic static function checkFolder(string $path): void;\n\n/**\n* Convert string to singular pascal case.\n*/\npublic static function singularPascalCase(string $string): string;\n\n/**\n* Convert string to singular pascal case.\n*/\npublic static function pascalCase(string $string): string;\n\n/**\n* Convert string to plural pascal case.\n*/\npublic static function pluralPascalCase(string $string): string;\n\n/**\n* Convert string to plural snake case.\n*/\npublic static function pluralSnakeCase(string $string): string;\n\n/**\n* Convert string to singular snake case.\n*/\npublic static function singularSnakeCase(string $string): string;\n\n/**\n* Convert string to plural pascal case.\n*/\npublic static function pluralCamelCase(string $string): string;\n\n/**\n* Convert string to singular pascal case.\n*/\npublic static function singularCamelCase(string $string): string;\n\n/**\n* Convert string to plural, kebab case, and lowercase.\n*/\npublic static function pluralKebabCase(string $string): string;\n\n/**\n* Convert string to kebab case, and lowercase.\n*/\npublic static function kebabCase(string $string): string;\n\n/**\n* Convert string to singular, kebab case, and lowercase.\n*/\npublic static function singularKebabCase(string $string): string;\n\n/**\n* Convert string to singular, remove special characters, and lowercase.\n*/\npublic static function cleanSingularLowerCase(string $string): string;\n\n/**\n* Remove special characters, and lowercase.\n*/\npublic static function cleanLowerCase(string $string): string;\n\n/**\n* Convert string to plural, remove special characters, and uppercase every first letters.\n*/\npublic static function cleanPluralUcWords(string $string): string;\n\n/**\n* Convert string to singular, remove special characters, and uppercase every first letters.\n*/\npublic static function cleanSingularUcWords(string $string): string;\n\n/**\n* Remove special characters, and uppercase every first letters.\n*/\npublic static function cleanUcWords(string $string): string;\n\n/**\n* Convert string to plural, remove special characters, and lowercase.\n*/\npublic static function cleanPluralLowerCase(string $string): string;\n\n/**\n* Get 1 column after id on the table.\n*/\npublic static function getColumnAfterId(string $table): string;\n\n/**\n* Select id and column after id on the table.\n*/\npublic static function selectColumnAfterIdAndIdItself(string $table): string;\n\n/**\n* Get model location or path if contains '/'.\n*/\npublic static function getModelLocation(string $model): string;\n\n/**\n* Converts camelCase string to have spaces between each.\n*/\npublic static function fromCamelCase(string $string): string;\n/**\n* Set model name from the latest of array(if exists).\n*/\npublic static function setModelName(string $model, string $style = 'pascal case'): string;\n\n/**\n* Set default image and code to controller.\n*/\npublic static function setDefaultImage(null|string $default, string $field, string $model): array;\n\n/**\n* Convert array from config to string like array.\n*/\npublic static function convertArraySidebarToString(array $sidebars): string;\n\n/**\n* Check if menu is active.\n*/\npublic static function isActiveMenu(string|array $route): string;</code></pre>"},{"location":"features/#things-that-we-want-to-add-in-the-future","title":"Things that we want to add in the future","text":"<ul> <li>API CRUD generator</li> <li>API docs</li> <li>Can create more relation type</li> <li>Upload file except image</li> <li>CRUD with desain pattern(Service/Repository Pattern)</li> <li>Laravel table pagination</li> <li>Import/Export csv</li> <li>Input for custom table name</li> <li>Change request validation as an array</li> <li>Add a checkbox for whether to use route model binding or not</li> <li>Add a checkbox to turn off automatic pluralization</li> <li>If the time zone is set to Indonesia, then disable pluralization</li> <li>Add username to users table</li> <li>New template admin</li> <li>Option to auto migrate table or not</li> <li>Add config for showing an image in the data table or not</li> <li>ability to hide/show the field on the view page</li> <li>Configuration to limit showing fields in the index page</li> <li>Can select the field that will be showing in belongsTo the relation</li> <li>The generator can make seeder and factory</li> <li>Add default config for minimum &amp; maximum length to column type string</li> <li>The generator can make subfolders for request class validation</li> <li>Add configuration for image type rounded or square</li> <li>Add support for diffForHumans() to input type date.</li> <li>Can custom validation(write-in input)</li> <li>The generator can use caching</li> <li>The generator can create policy</li> <li>The generator can create model observer</li> <li>Use database transaction</li> <li>The generator can create mutator &amp; casting</li> <li>Configuration for upload file to S3</li> <li>Add soft delete option</li> <li>If the model is in a subfolder then the route will use the sub-route</li> <li>Add unit test for the generator</li> <li>The generator can create unit test</li> <li>Add notification if the user changed their email or password (package)</li> <li>Add activity log (package)</li> <li>Add backup database (package)</li> <li>The Generator uses enum class for column type enum</li> <li>Refactor code</li> </ul> <p>The list is subject to change at any time and features may be added in any order.</p>"},{"location":"getting_started/","title":"Getting Started","text":""},{"location":"getting_started/#requirements","title":"Requirements","text":"<p>All you need is Composer, PHP ^8.1, and Laravel ^9.x.</p>"},{"location":"getting_started/#installation","title":"Installation","text":"<pre><code>composer require evdigiina/generator --dev</code></pre> <p>For this package, there are two variations: Simple Version and Full Version</p>"},{"location":"getting_started/#simple-version","title":"Simple Version","text":"<p>Only the generator, includes: Yajra Datatables, Intervention Image, and Bootstrap 5.</p> <p>View all features</p> <p>Publish assets</p> <pre><code>php artisan generator:install simple</code></pre> <p>Register the provider in <code>config/app.php</code></p> <pre><code>/*\n* Package Service Providers...\n*/\nApp\\Providers\\ViewComposerServiceProvider::class,</code></pre> <p>Then go to <code>/simple-generators/create/</code></p>"},{"location":"getting_started/#full-version","title":"Full Version","text":"<p>The generator + starter app, includes: Yajra Datatables, Intervention Image, Laravel Fortify, Spatie Permission, and Mazer Template.</p> <p>View all features.</p> <p>Installing this package after a brand-new Laravel installation is necessary if you want to use the full version of it. because several files will be overwritten.</p> <p>Install Laravel Fortify &amp; Spatie Permission</p> <pre><code>composer require laravel/fortify spatie/laravel-permission</code></pre> <p>Publish assets</p> <pre><code>php artisan generator:install full</code></pre> <p>Warning! Be careful with this command, it will overwrite several files, don't run it multiple times.</p> <p>Register the provider in <code>config/app.php</code></p> <pre><code>/*\n* Package Service Providers...\n*/\n\nApp\\Providers\\FortifyServiceProvider::class,\nSpatie\\Permission\\PermissionServiceProvider::class,\nApp\\Providers\\ViewComposerServiceProvider::class,</code></pre> <p>Run migration and seeder</p> <pre><code>php artisan migrate --seed</code></pre> <p>Then go to <code>/generators/create</code></p> <p>Account</p> <ul> <li>Email: admin@example.com</li> <li>Password: password</li> </ul>"},{"location":"getting_started/#whats-inside","title":"What's inside?","text":""},{"location":"getting_started/#simple-version_1","title":"Simple Version","text":"<ul> <li>Yajra datatable - ^10.x</li> <li>Intervention Image - ^2.x</li> <li>Bootstrap - ^5.x</li> </ul>"},{"location":"getting_started/#full-version_1","title":"Full Version","text":"<ul> <li>Yajra datatable - ^10.x</li> <li>Intervention Image - ^2.x</li> <li>Laravel Forify - ^1.x</li> <li>Spatie permission - ^5.x</li> <li>Mazer template - ^2.x </li> </ul>"},{"location":"how_to_contribute/","title":"How To Contribute","text":"<p>To contribute to this project, please follow the following steps:</p> <ul> <li> <p>Star &amp; fork the repository</p> </li> <li> <p>Create a new laravel project using the following command: <code>composer create-project laravel/laravel generator-dev</code> or <code>laravel new generator-dev</code></p> </li> <li> <p>Install the dependencies using the following command: <code>composer require laravel/fortify spatie/laravel-permission intervention/image \"^2.0\" yajra/laravel-datatables-oracle</code></p> </li> <li> <p>Publish <code>fortify</code> resources <code>php artisan vendor:publish --provider=\"Laravel\\Fortify\\FortifyServiceProvider\"</code></p> </li> <li> <p>Create folder <code>packages/evdigi-ina</code> in the root of the project</p> </li> <li> <p>Cd into <code>packages/evdigi-ina</code>, clone the repository <code>git clone https://github.com/Evdigi-INA/generator.git</code> and install the depedency <code>composer i</code> then back again into root project</p> </li> <li> <p>Add the following code to the <code>composer.json</code></p> </li> </ul> <pre><code>\"autoload\": {\n    \"psr-4\": {\n        \"App\\\\\": \"app/\",\n        \"Database\\\\Factories\\\\\": \"database/factories/\",\n        \"Database\\\\Seeders\\\\\": \"database/seeders/\",\n        \"EvdigiIna\\\\Generator\\\\\": \"packages/evdigi-ina/generator/src/\"\n    }\n},</code></pre> <ul> <li> <p>Run the following command <code>composer dump-autoload</code></p> </li> <li> <p>Add the following code to the <code>config/app.php</code></p> </li> </ul> <pre><code>/*\n* Package Service Providers...\n*/\nEvdigiIna\\Generator\\Providers\\GeneratorServiceProvider::class,\nYajra\\DataTables\\DataTablesServiceProvider::class,\nSpatie\\Permission\\PermissionServiceProvider::class,\nIntervention\\Image\\ImageServiceProvider::class,\nApp\\Providers\\FortifyServiceProvider::class,\n// App\\Providers\\ViewComposerServiceProvider::class,</code></pre> <ul> <li>Publish required file for the generator <code>php artisan generator:install full</code></li> <li>Add the following code to the <code>composer.json</code> (autoload files)</li> </ul> <pre><code>\"autoload\": {\n    \"psr-4\": {\n        \"App\\\\\": \"app/\",\n        \"Database\\\\Factories\\\\\": \"database/factories/\",\n        \"Database\\\\Seeders\\\\\": \"database/seeders/\",\n        \"EvdigiIna\\\\Generator\\\\\": \"packages/evdigi-ina/generator/src/\"\n    },\n     \"files\": [\n         \"App/Generators/helper.php\"\n    ]\n},</code></pre> <ul> <li> <p>Uncomment <code>App\\Providers\\ViewComposerServiceProvider::class</code> in <code>config/app.php</code></p> </li> <li> <p>Then run <code>composer dump-autoload</code> for a second time</p> </li> <li> <p>Migrate the database <code>php artisan migrate --seed</code></p> </li> <li> <p>Run local development server <code>php artisan serve</code> and go to <code>/generators/create</code></p> </li> <li> <p>Make changes code as you wish in <code>packages/evdigi-ina/generator</code>.</p> </li> <li> <p>Make sure the code is working properly</p> </li> <li> <p>Checkout to a new branch <code>git branch your_name</code> &amp;&amp; <code>git checkout your_name</code> &amp;&amp; <code>git add .</code> &amp;&amp; <code>git commit -m \"describe your changes</code></p> </li> <li> <p>Push the code to the repository <code>git push origin your_name</code></p> </li> <li> <p>Create a pull request.</p> </li> </ul>"},{"location":"sponsors/","title":"Sponsors / Supporters","text":""},{"location":"sponsors/#become-a-sponsor-supporter","title":"Become a sponsor / supporter","text":"<p>Generator is an MIT-licensed open-source project and is completely free to use. The tremendous amount of effort needed to maintain and develop new features for the project is only made sustainable thanks to the generous financial backing of our sponsors or supporters.</p>"},{"location":"sponsors/#give-it-personally-to-our-core-team-member","title":"Give it personally to our core team member","text":"<ul> <li> Mohammad Zulfahmi (Author)</li> <li>GitHub Sponsor</li> <li>Buymeacoffe</li> <li>Ko-fi</li> <li>Saweria</li> </ul> <ul> <li> Rachmad Nur Hayat</li> <li>GitHub</li> <li>Buymeacoffe</li> <li>Ko-fi</li> <li>Saweria</li> </ul>"},{"location":"sponsors/#sponsor-as-a-company","title":"Sponsor as a company","text":"<p>Your company logo will appear on our website and GitHub project READMEs. Furthermore, supporting OSS increases your brand's reputation. To do so, please contact us using the details provided below.</p> <ul> <li>mohammad.zulfahmi03@gmail.com</li> <li>Rahmat</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#create-your-first-crud","title":"Create your first CRUD","text":"<p>Go to <code>/generators/create</code> if yo're using Full Version or <code>/simple-generators/create</code> for Simple Version</p> <p>Below is table about supported input type &amp; validation when you are using some column type.</p> Column Type Input Type Validation Length (min &amp; max) <code>string</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>integer</code> <code>number, range, hidden</code> <code>required|numeric</code> \u2705 <code>text</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>boolean</code> <code>radio, select, datalist</code> <code>required|boolean</code> \u274c <code>char</code> <code>text, color, week, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>date</code> <code>date, month</code> <code>required|date</code> \u274c <code>time</code> <code>time</code> <code>required|date</code> \u274c <code>year</code> <code>select, datalist</code> <code>required|numeric</code> \u274c <code>dateTime</code> <code>datetime-local</code> <code>required|date</code> \u274c <code>decimal</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>double</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>enum</code> <code>select, radio, datalist</code> <code>required|in</code> \u274c <code>float</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>foreignId</code> <code>select, datalist</code> <code>required|exist</code> \u274c <code>tinyInteger</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>mediumInteger</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>bigInteger</code> <code>number, range, hidden</code> <code>required|numeric</code> \u274c <code>tinyText</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>mediumText</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <code>longText</code> <code>text, textarea, email, telephone, password url, search, file, hidden</code> <code>required|string</code> \u2705 <p><code>required</code> validation will change to <code>nullable</code> if you uncheck required switch in the form, if any input type <code>password</code> will automatically added <code>confirmed</code> validation, <code>min:1|max:100</code> for supported length column and <code>email|unique</code> for <code>email</code> input type.</p>"},{"location":"usage/#create-a-relation","title":"Create a Relation","text":"<p>For now is only support One To Many (Inverse) / Belongs To.</p> <p>There is rules you must be followed if you want create a a relation:</p> <ul> <li>Field name: <ul> <li>Must be the table name but in singular + <code>_id</code>, eg: if we have a <code>users</code> table then it must be a <code>user_id</code>.</li> </ul> </li> <li>Column Type:<ul> <li>Change to <code>foreignId</code>.</li> <li>For constrain or related model name, you can fill with table name (automatically change to plural).</li> <li>Action on update &amp; delete:<ul> <li>On update: <code>nothing, cascade, restrict</code></li> <li>On delete: <code>nothing, cascade, restrict, null</code></li> </ul> </li> </ul> </li> </ul> <p>Make sure the related table &amp; model already exist, if its no then the selected field for showing in <code>select</code>/<code>datalist</code> is an <code>id</code>, by default selected field is second column in related table.</p>"},{"location":"usage/#create-an-upload-file","title":"Create an Upload File","text":"<p>Set column type to <code>string</code>, input type to <code>file</code>, select file type (for now only support image), fill the max size(optional), and default value (must be a valid link), also we use Intervention Image for manipulating uploaded image. all setting for images are available at <code>config/generator.php</code>.</p> <p>Default image configuration: <pre><code>'image' =&gt; [\n    /**\n    * Path for store the image.\n    *\n    * available options:\n    * 1. public\n    * 2. storage\n    */\n    'path' =&gt; 'storage',\n\n    /**\n    * Will used if image is nullable and default value is null.\n    */\n    'default' =&gt; 'https://via.placeholder.com/350?text=No+Image+available',\n\n    /**\n    * Crop the uploaded image using intervention image.\n    */\n    'crop' =&gt; true,\n\n    /**\n    * When set to true the uploaded image aspect ratio will still original.\n    */\n    'aspect_ratio' =&gt; true,\n\n    /**\n    * Crop image size.\n    */\n    'width' =&gt; 500,\n    'height' =&gt; 500,\n],</code></pre></p> <p>if you are using <code>storage</code> for store the image, make sure you run <code>php artisan storage:link</code></p>"},{"location":"usage/#create-a-sidebar-menu","title":"Create a Sidebar Menu","text":"<p>This feature only available in full version.</p> <p>You can easily create a dynamic sidebar menu with just a few inputs. all sidebar menus configuration are placed in <code>config/generator.php</code></p> <p>How about I don't need a dynamic sidebar menu, I just want to create my menu in <code>blade</code>. yeah, we provide it, click here how to do it.</p>"},{"location":"usage/#role-permissions","title":"Role &amp; Permissions","text":"<p>While you are using the full version, after creating a new module will automatically generate some permissions and assign them to the role <code>admin</code>. all permissions are stored in <code>config/permission.php</code></p> <p>Here an example: <pre><code>[\n    'group' =&gt; 'products',\n    'access' =&gt; [\n        'product view',\n        'product create',\n        'product edit',\n        'product delete'\n    ]\n],</code></pre></p>"},{"location":"usage/#configuration","title":"Configuration","text":"<p>Below is the default config for the generator and sidebar menus:</p> <pre><code>&lt;?php\n\nreturn [\n    /**\n     * If any input file(image) as default will used options below.\n     */\n    'image' =&gt; [\n        /**\n         * Path for store the image.\n         *\n         * available options:\n         * 1. public\n         * 2. storage\n         */\n        'path' =&gt; 'storage',\n\n        /**\n         * Will used if image is nullable and default value is null.\n         */\n        'default' =&gt; 'https://via.placeholder.com/350?text=No+Image+available',\n\n        /**\n         * Crop the uploaded image using intervention image.\n         */\n        'crop' =&gt; true,\n\n        /**\n         * When set to true the uploaded image aspect ratio will still original.\n         */\n        'aspect_ratio' =&gt; true,\n\n        /**\n         * Crop image size.\n         */\n        'width' =&gt; 500,\n        'height' =&gt; 500,\n    ],\n\n    'format' =&gt; [\n        /**\n         * Will used to first year on select, if any column type year.\n         */\n        'first_year' =&gt; 1900,\n\n        /**\n         * If any date column type will cast and display used this format, but for input date still will used Y-m-d format.\n         *\n         * another most common format:\n         * - M d Y\n         * - d F Y\n         * - Y m d\n         */\n        'date' =&gt; 'd/m/Y',\n\n        /**\n         * If any input type month will cast and display used this format.\n         */\n        'month' =&gt; 'm/Y',\n\n        /**\n         * If any input type time will cast and display used this format.\n         */\n        'time' =&gt; 'H:i',\n\n        /**\n         * If any datetime column type or datetime-local on input, will cast and display used this format.\n         */\n        'datetime' =&gt; 'd/m/Y H:i',\n\n        /**\n         * Limit string on index view for any column type text or longtext.\n         */\n        'limit_text' =&gt; 100,\n    ],\n\n    /**\n     * It will used for generator to manage and showing menus on sidebar views.\n     *\n     * Example:\n     * [\n     *   'header' =&gt; 'Main',\n     *\n     *   // All permissions in menus[] and submenus[]\n     *   'permissions' =&gt; ['test view'],\n     *\n     *   menus' =&gt; [\n     *       [\n     *          'title' =&gt; 'Main Data',\n     *          'icon' =&gt; '&lt;i class=\"bi bi-collection-fill\"&gt;&lt;/i&gt;',\n     *          'route' =&gt; null,\n     *\n     *          // permission always null when isset submenus\n     *          'permission' =&gt; null,\n     *\n     *          // All permissions on submenus[] and will empty[] when submenus equals to []\n     *          'permissions' =&gt; ['test view'],\n     *\n     *          'submenus' =&gt; [\n     *                 [\n     *                     'title' =&gt; 'Tests',\n     *                     'route' =&gt; '/tests',\n     *                     'permission' =&gt; 'test view'\n     *                  ]\n     *               ],\n     *           ],\n     *       ],\n     *  ],\n     *\n     * This code below always changes when you use a generator and maybe you must lint or format the code.\n     */\n    'sidebars' =&gt; [\n        [\n            'header' =&gt; 'Main',\n            'permissions' =&gt; [\n                'test view'\n            ],\n            'menus' =&gt; [\n                [\n                    'title' =&gt; 'Main Data',\n                    'icon' =&gt; '&lt;i class=\"bi bi-collection-fill\"&gt;&lt;/i&gt;',\n                    'route' =&gt; null,\n                    'permission' =&gt; null,\n                    'permissions' =&gt; [\n                        'test view'\n                    ],\n                    'submenus' =&gt; [\n                        [\n                            'title' =&gt; 'Tests',\n                            'route' =&gt; '/tests',\n                            'permission' =&gt; 'test view'\n                        ]\n                    ]\n                ]\n            ]\n        ],\n        [\n            'header' =&gt; 'Users',\n            'permissions' =&gt; [\n                'user view',\n                'role &amp; permission view'\n            ],\n            'menus' =&gt; [\n                [\n                    'title' =&gt; 'Users',\n                    'icon' =&gt; '&lt;i class=\"bi bi-people-fill\"&gt;&lt;/i&gt;',\n                    'route' =&gt; '/users',\n                    'permission' =&gt; 'user view',\n                    'permissions' =&gt; [],\n                    'submenus' =&gt; []\n                ],\n                [\n                    'title' =&gt; 'Roles &amp; permissions',\n                    'icon' =&gt; '&lt;i class=\"bi bi-person-check-fill\"&gt;&lt;/i&gt;',\n                    'route' =&gt; '/roles',\n                    'permission' =&gt; 'role &amp; permission view',\n                    'permissions' =&gt; [],\n                    'submenus' =&gt; []\n                ],\n            ]\n        ],\n    ],\n];\n</code></pre>"},{"location":"usage/#production-setup","title":"Production Setup","text":"<p>Because this package is only installed in development, so some files will not be included in the production environment. so you must do the following steps:</p> <p>In <code>composer.json</code> add this code below:</p> <pre><code>\"autoload\": {\n    \"files\": [\n        \"App/Generators/helper.php\"\n    ]\n},\n\"extra\": {\n    \"laravel\": {\n        \"aliases\": {\n            \"GeneratorUtils\": \"App\\\\Generators\\\\GeneratorUtils\",\n        }\n    }\n}</code></pre> <p>Then run <code>composer dump-autoload</code>.</p>"}]}